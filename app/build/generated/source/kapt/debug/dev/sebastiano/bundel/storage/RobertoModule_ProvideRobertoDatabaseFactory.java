// Generated by Dagger (https://dagger.dev).
package dev.sebastiano.bundel.storage;

import android.app.Application;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RobertoModule_ProvideRobertoDatabaseFactory implements Factory<Database> {
  private final DatabaseModule module;

  private final Provider<Application> applicationProvider;

  public RobertoModule_ProvideRobertoDatabaseFactory(
      DatabaseModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Database get() {
    return provideRobertoDatabase(module, applicationProvider.get());
  }

  public static RobertoModule_ProvideRobertoDatabaseFactory create(
      DatabaseModule module,
      Provider<Application> applicationProvider) {
    return new RobertoModule_ProvideRobertoDatabaseFactory(module, applicationProvider);
  }

  public static Database provideRobertoDatabase(
      DatabaseModule instance,
      Application application) {
    return Preconditions.checkNotNullFromProvides(instance.provideDatabase(application));
  }
}
